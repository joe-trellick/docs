"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[538],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return f}});var o=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,o,r=function(t,e){if(null==t)return{};var n,o,r={},a=Object.keys(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=o.createContext({}),s=function(t){var e=o.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=s(t.components);return o.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,c=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),d=s(n),f=r,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return n?o.createElement(m,i(i({ref:e},p),{},{components:n})):o.createElement(m,i({ref:e},p))}));function f(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},58215:function(t,e,n){var o=n(67294);e.Z=function(t){var e=t.children,n=t.hidden,r=t.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:r},e)}},55064:function(t,e,n){n.d(e,{Z:function(){return u}});var o=n(67294),r=n(79443);var a=function(){var t=(0,o.useContext)(r.Z);if(null==t)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return t},i=n(86010),l="tabItem_1uMI",c="tabItemActive_2DSg";var s=37,p=39;var u=function(t){var e=t.lazy,n=t.block,r=t.defaultValue,u=t.values,d=t.groupId,f=t.className,m=a(),g=m.tabGroupChoices,y=m.setTabGroupChoices,k=(0,o.useState)(r),h=k[0],C=k[1],b=o.Children.toArray(t.children),v=[];if(null!=d){var T=g[d];null!=T&&T!==h&&u.some((function(t){return t.value===T}))&&C(T)}var w=function(t){var e=t.currentTarget,n=v.indexOf(e),o=u[n].value;C(o),null!=d&&(y(d,o),setTimeout((function(){var t,n,o,r,a,i,l,s;(t=e.getBoundingClientRect(),n=t.top,o=t.left,r=t.bottom,a=t.right,i=window,l=i.innerHeight,s=i.innerWidth,n>=0&&a<=s&&r<=l&&o>=0)||(e.scrollIntoView({block:"center",behavior:"smooth"}),e.classList.add(c),setTimeout((function(){return e.classList.remove(c)}),2e3))}),150))},N=function(t){var e,n;switch(t.keyCode){case p:var o=v.indexOf(t.target)+1;n=v[o]||v[0];break;case s:var r=v.indexOf(t.target)-1;n=v[r]||v[v.length-1]}null==(e=n)||e.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},f)},u.map((function(t){var e=t.value,n=t.label;return o.createElement("li",{role:"tab",tabIndex:h===e?0:-1,"aria-selected":h===e,className:(0,i.Z)("tabs__item",l,{"tabs__item--active":h===e}),key:e,ref:function(t){return v.push(t)},onKeyDown:N,onFocus:w,onClick:w},n)}))),e?(0,o.cloneElement)(b.filter((function(t){return t.props.value===h}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},b.map((function(t,e){return(0,o.cloneElement)(t,{key:e,hidden:t.props.value!==h})}))))}},79443:function(t,e,n){var o=(0,n(67294).createContext)(void 0);e.Z=o},53634:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return d},default:function(){return m}});var o=n(87462),r=n(63366),a=(n(67294),n(3905)),i=n(55064),l=n(58215),c=["components"],s={title:"C#",sidebar_position:6},p=void 0,u={unversionedId:"installation/csharp",id:"installation/csharp",isDocsHomePage:!1,title:"C#",description:"Installation",source:"@site/docs/installation/csharp.md",sourceDirName:"installation",slug:"/installation/csharp",permalink:"/installation/csharp",editUrl:"https://github.com/getditto/docs/edit/master/website/docs/installation/csharp.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"C#",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Android",permalink:"/installation/android"},next:{title:"C++",permalink:"/installation/cpp"}},d=[{value:"Installation",id:"installation",children:[]},{value:"Setting Up Connections",id:"setting-up-connections",children:[{value:"Explicitly connecting another remote Ditto instance",id:"explicitly-connecting-another-remote-ditto-instance",children:[]},{value:"Listening for Connections on a Specific Port",id:"listening-for-connections-on-a-specific-port",children:[]}]},{value:"Explicitly enabling Peer to Peer Connections",id:"explicitly-enabling-peer-to-peer-connections",children:[{value:"Combining Multiple Transports",id:"combining-multiple-transports",children:[]}]}],f={toc:d};function m(t){var e=t.components,n=(0,r.Z)(t,c);return(0,a.kt)("wrapper",(0,o.Z)({},f,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Currently, the C# SDK runs on macOS, Windows, and Linux. Xamarin iOS and Android Support are coming soon. Please email us at ",(0,a.kt)("a",{parentName:"p",href:"mailto:contact@ditto.live"},"contact@ditto.live")," if these other platforms are essential for you. ")),(0,a.kt)("p",null,"The C# SDK is available as part of ",(0,a.kt)("a",{parentName:"p",href:"https://nuget.org"},"NuGet"),". The common ways to install the SDK is with either the NuGet Package Manager, the .NET CLI, or by adding a reference to the CSProj XML file."),(0,a.kt)(i.Z,{groupId:"dotnet-installation",defaultValue:"javascript",values:[{label:"Package Manager",value:"package-manager"},{label:".NET CLI",value:"cli"},{label:"Package Reference",value:"package-reference"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"package-manager",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Install-Package Ditto\n"))),(0,a.kt)(l.Z,{value:"cli",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dotnet add package Ditto\n"))),(0,a.kt)(l.Z,{value:"package-reference",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<PackageReference Include="Ditto" Version="1.*" />\n')))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Ditto/"},"For more installation options visit the NuGet Page")),(0,a.kt)("p",null,"Now in your code you can call:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using DittoSDK;\nusing System.Collections.Generic;\n\nvar ditto = new Ditto(identity: DittoIdentity.Development(appName: "live.ditto.tasks"));\n\nditto.SetLicenseToken("my token");\nditto.TryStartSync();\n\nvar insertedId = ditto.Store.Collection("cars").Insert(new Dictionary<string, object> {\n    { "make", "honda" },\n    { "color", "red" },\n});\n')),(0,a.kt)("h2",{id:"setting-up-connections"},"Setting Up Connections"),(0,a.kt)("p",null,"Before you call ",(0,a.kt)("inlineCode",{parentName:"p"},"TryStartSync()")," you may want to configure additional connections for the current Ditto instance. Before calling ",(0,a.kt)("inlineCode",{parentName:"p"},"TryStartSync()"),", you'll need to call ",(0,a.kt)("inlineCode",{parentName:"p"},"ditto.SetTransportConfig")," with a ",(0,a.kt)("inlineCode",{parentName:"p"},"DittoTransportConfig")," value."),(0,a.kt)("h3",{id:"explicitly-connecting-another-remote-ditto-instance"},"Explicitly connecting another remote Ditto instance"),(0,a.kt)("p",null,"If you know the host and port of another remote Ditto instance and would like to connect to it, construct a ",(0,a.kt)("inlineCode",{parentName:"p"},"DittoTransportConfig")," object and add the host and port to the ",(0,a.kt)("inlineCode",{parentName:"p"},"DittoTransportConfig.Connect.TcpServers")," property as a ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),". The string format should be ",(0,a.kt)("inlineCode",{parentName:"p"},"host:port"),", separated by a colon."),(0,a.kt)("p",null,"In the example below, we know of two other Ditto instances located on:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Host IP ",(0,a.kt)("inlineCode",{parentName:"li"},"135.1.5.5")," at port ",(0,a.kt)("inlineCode",{parentName:"li"},"12345")),(0,a.kt)("li",{parentName:"ul"},"Host IP ",(0,a.kt)("inlineCode",{parentName:"li"},"185.1.5.5")," at port ",(0,a.kt)("inlineCode",{parentName:"li"},"4567"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'DittoTransportConfig transportConfig = new DittoTransportConfig();\n// Connect explicitly to a remote device on \ntransportConfig.Connect.TcpServers.Add("135.1.5.5:12345");\n// you can add as many TcpServers as you would like.\ntransportConfig.Connect.TcpServers.Add("185.1.5.5:4567");\n// set the transport config \nditto.SetTransportConfig(transportConfig);\n// now you can start ditto\'s sync \nditto.TryStartSync();\n')),(0,a.kt)("p",null,"Feel free to add as many known remote ",(0,a.kt)("inlineCode",{parentName:"p"},"host:port")," strings."),(0,a.kt)("h3",{id:"listening-for-connections-on-a-specific-port"},"Listening for Connections on a Specific Port"),(0,a.kt)("p",null,"You can enable the C# Ditto instance to listen for incoming connections from other remotes Ditto instances on a specific port. "),(0,a.kt)("p",null,"In this example, we would like our Ditto instance to listen to ",(0,a.kt)("em",{parentName:"p"},"incoming")," connections on port ",(0,a.kt)("inlineCode",{parentName:"p"},"4000")," on ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'DittoTransportConfig transportConfig = new DittoTransportConfig();\ntransportConfig.Listen.Tcp = new DittoTcpListenConfig();\n// By default Listen.Tcp.Enabled is false, be sure to set it to true.\ntransportConfig.Listen.Tcp.Enabled = true;\n// if you want to listen on localhost, most likely you will use 0.0.0.0\n// do not use "localhost" as a string\ntransportConfig.Listen.Tcp.InterfaceIp = "0.0.0.0"; \n// specify your port.\ntransportConfig.Listen.Tcp.Port = 4000; \nditto.SetTransportConfig(transportConfig);\n\n// now you can call `ditto.TryStartSync()` \nditto.TryStartSync();\n')),(0,a.kt)("p",null,"Incoming connections from other Ditto instances will be able to connect only if the port is accessible. Depending on your deployment _be sure to check that external connections can reach the port that you have specified in your ",(0,a.kt)("inlineCode",{parentName:"p"},"DittoTransportConfig"),". You may need to set up port forwarding if external ports map differently to your host."),(0,a.kt)("h2",{id:"explicitly-enabling-peer-to-peer-connections"},"Explicitly enabling Peer to Peer Connections"),(0,a.kt)("p",null,"If you do not attempt to configure a ",(0,a.kt)("inlineCode",{parentName:"p"},"DittoTransportConfig")," but call ",(0,a.kt)("inlineCode",{parentName:"p"},"ditto.TryStartSync()"),", your Ditto instance will automatically attempt to connect to other ditto instances on the Local Area Network. However, if you supply a ",(0,a.kt)("inlineCode",{parentName:"p"},"DittoTransportConfig"),", this will not automatically be enabled. You'll need to remember to enable local area network peer to peer connnections with ",(0,a.kt)("inlineCode",{parentName:"p"},"EnableAllPeerToPeer()"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"DittoTransportConfig transportConfig = new DittoTransportConfig();\n// Enable Local Area Network Connections\ntransportConfig.EnableAllPeerToPeer();\nditto.SetTransportConfig(transportConfig);\nditto.TryStartSync();\n")),(0,a.kt)("h3",{id:"combining-multiple-transports"},"Combining Multiple Transports"),(0,a.kt)("p",null,"You can specify several modes of transport configuration within ",(0,a.kt)("inlineCode",{parentName:"p"},"DittoTransportConfig"),". The following snippet shows you a ditto instance that can:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Connect to local area network devices"),(0,a.kt)("li",{parentName:"ol"},"Listen for incoming remote connections"),(0,a.kt)("li",{parentName:"ol"},"Connect to remote devices with a known host and port. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'DittoTransportConfig transportConfig = new DittoTransportConfig();\n\n// 1. Enable Local Area Network Connections\ntransportConfig.EnableAllPeerToPeer();\n\n// 2. Listen for incoming connections on port 4000\ntransportConfig.Listen.Tcp.Enabled = true;\ntransportConfig.Listen.Tcp.InterfaceIp = "0.0.0.0";\ntransportConfig.Listen.Tcp.Port = 4000;\n\n// 3. Connect explicitly to a remote device on \ntransportConfig.Connect.TcpServers.Add("135.1.5.5:12345");\ntransportConfig.Connect.TcpServers.Add("185.1.5.5:12345");\n\nditto.SetTransportConfig(transportConfig);\n\nditto.TryStartSync();\n')))}m.isMDXComponent=!0},86010:function(t,e,n){function o(t){var e,n,r="";if("string"==typeof t||"number"==typeof t)r+=t;else if("object"==typeof t)if(Array.isArray(t))for(e=0;e<t.length;e++)t[e]&&(n=o(t[e]))&&(r&&(r+=" "),r+=n);else for(e in t)t[e]&&(r&&(r+=" "),r+=e);return r}function r(){for(var t,e,n=0,r="";n<arguments.length;)(t=arguments[n++])&&(e=o(t))&&(r&&(r+=" "),r+=e);return r}n.d(e,{Z:function(){return r}})}}]);