"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6506],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},58215:function(e,t,n){var r=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},55064:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(67294),o=n(79443);var i=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},a=n(86010),l="tabItem_1uMI",s="tabItemActive_2DSg";var c=37,u=39;var p=function(e){var t=e.lazy,n=e.block,o=e.defaultValue,p=e.values,d=e.groupId,f=e.className,m=i(),y=m.tabGroupChoices,g=m.setTabGroupChoices,v=(0,r.useState)(o),b=v[0],k=v[1],h=r.Children.toArray(e.children),w=[];if(null!=d){var N=y[d];null!=N&&N!==b&&p.some((function(e){return e.value===N}))&&k(N)}var O=function(e){var t=e.currentTarget,n=w.indexOf(t),r=p[n].value;k(r),null!=d&&(g(d,r),setTimeout((function(){var e,n,r,o,i,a,l,c;(e=t.getBoundingClientRect(),n=e.top,r=e.left,o=e.bottom,i=e.right,a=window,l=a.innerHeight,c=a.innerWidth,n>=0&&i<=c&&o<=l&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},C=function(e){var t,n;switch(e.keyCode){case u:var r=w.indexOf(e.target)+1;n=w[r]||w[0];break;case c:var o=w.indexOf(e.target)-1;n=w[o]||w[w.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},f)},p.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,className:(0,a.Z)("tabs__item",l,{"tabs__item--active":b===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:C,onFocus:O,onClick:O},n)}))),t?(0,r.cloneElement)(h.filter((function(e){return e.props.value===b}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==b})}))))}},79443:function(e,t,n){var r=(0,n(67294).createContext)(void 0);t.Z=r},99600:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=n(55064),l=n(58215),s=["components"],c={title:"iOS",sidebar_position:2},u="iOS Installation Instructions",p={unversionedId:"installation/ios",id:"installation/ios",isDocsHomePage:!1,title:"iOS",description:"1. Ensure you have CocoaPods 1.1.0 or later",source:"@site/docs/installation/ios.md",sourceDirName:"installation",slug:"/installation/ios",permalink:"/installation/ios",editUrl:"https://github.com/getditto/docs/edit/master/docs/installation/ios.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"iOS",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"JavaScript",permalink:"/installation/javascript"},next:{title:"Android",permalink:"/installation/android"}},d=[],f={toc:d};function m(e){var t=e.components,c=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},f,c,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ios-installation-instructions"},"iOS Installation Instructions"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://guides.cocoapods.org/using/getting-started.html"},"Ensure you have CocoaPods 1.1.0 or later")),(0,i.kt)("li",{parentName:"ol"},"Ensure you have ",(0,i.kt)("inlineCode",{parentName:"li"},"use_frameworks!")," in your Podfile"),(0,i.kt)("li",{parentName:"ol"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"DittoSwift")," to your ",(0,i.kt)("strong",{parentName:"li"},"Podfile")," like so:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"pod 'DittoSwift'\n")),(0,i.kt)("p",null,"If you are installing for an Objective-C project use the following CocoaPod instead."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"pod 'DittoObjC'\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Add the following permissions in your ",(0,i.kt)("inlineCode",{parentName:"li"},"Info.plist")," so that your app can use all the necessary communication channels. Right click on your project's ",(0,i.kt)("inlineCode",{parentName:"li"},"Info.plist")," file, click ",(0,i.kt)("inlineCode",{parentName:"li"},"Open As > Source Code"),".")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Example banner",src:n(87322).Z})),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("em",{parentName:"li"},"Add")," the following keys. ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"title=Info.plist",title:"Info.plist"},"<key>NSBluetoothAlwaysUsageDescription</key>\n<string>Uses Bluetooth to connect and sync with nearby devices</string>\n<key>NSBluetoothPeripheralUsageDescription</key>\n<string>Uses Bluetooth to connect and sync with nearby devices</string>\n<key>NSLocalNetworkUsageDescription</key>\n<string>Uses WiFi to connect and sync with nearby devices</string>\n<key>NSBonjourServices</key>\n<array>\n  <string>_http-alt._tcp.</string>\n</array>\n")),(0,i.kt)("p",null,"The values like ",(0,i.kt)("inlineCode",{parentName:"p"},"<string>Uses WiFi to connect and sync with nearby devices</string>")," will be displayed in a prompt. Replace it with whatever language is best for your users."),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"You can now use Ditto in your application:")),(0,i.kt)(a.Z,{groupId:"programming-language",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Objective-C",value:"objc"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'import DittoSwift\n\nlet ditto = Ditto()\nditto.setLicenseToken("my license token")\ntry! ditto.tryStartSync()\n'))),(0,i.kt)(l.Z,{value:"objc",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objc"},'#import <DittoObjC/DittoObjC.h>\n\n\nDITDitto *ditto = [[DITDitto alloc] init];\n[ditto setLicenseToken: @"my license token"];\nNSError *error = nil;\n[ditto tryStartSync:&error];\n')))))}m.isMDXComponent=!0},86010:function(e,t,n){function r(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}function o(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(o&&(o+=" "),o+=t);return o}n.d(t,{Z:function(){return o}})},87322:function(e,t,n){t.Z=n.p+"assets/images/xcode-info-plist-open-as-source-ca91457f4e8885d19aa8ecb8abe54ad8.png"}}]);